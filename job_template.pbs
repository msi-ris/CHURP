#!/bin/bash -l
#PBS -l nodes=1:ppn=8,mem=16gb,walltime=24:00:00

#TODO: test each command

# Parse SampleSheet using $PBS_ARRAYID
# Assume there is a header line, so for ID n, the sample is n+1
# Sample Sheet: SampleNM, R1, R2, Trim (yes or no), TrimmomaticOption, Hisat2Index, Hisat2Option, GTF/GFF
IN=`head -n $((${PBS_ARRAYID}+1)) ${SampleSheet} | tail -1`
while IFS="\t" read -ra OPTS; do 
    SAMPLENM=${OPTS[0]}
    R1FILE=${OPTS[1]}    
    R2FILE=${OPTS[2]}
    TRIM=${OPTS[3]}
    TRIMOPTS=${OPTS[4]}
    HISAT2INDEX=${OPTS[5]}
    HISAT2OPTS=${OPTS[6]}
    GTFFILE=${OPTS[7]}
done <<< "$IN"

# load necessary modules
module load hisat2 picard fastqc trimmomatic java samtools

# set working directory
cd $WORKDIR/singlesamples
mkdir ${SAMPLENM}
cd ${SAMPLENM}

# start workflow with check point
# Set Up a log file instead (?)
[ ! -f fastqc.done]
    fastqc -t 2 ${R1FILE} ${R2FILE}
    touch fastqc.done
[ $TRIM = "yes" ]
    [ ! -f trimmomatic.done ]
        java -jar ${TRIMMOMATIC}/trimmomatic.jar PE -threads 8 -basein $R1FILE -baseout ${SAMPLENM} $TIRMOPTS
        touch trimmomatic.done
    [ ! -f fastqc.trim.done ]
        fastqc -t 2 ${SAMPLENM}_1P ${SAMPLENM}_2P
        touch fastqc.trim.done
[ ! -f hisat2.done ]
    if [ $TRIM = "yes" ]; then
        hisat2 $HISAT2OPTS -x $HISAT2INDEX -1 ${SAMPLENM}_1P -2 ${SAMPLENM}_2P -S ${SAMPLENM}.sam
    else:
        hisat2 $HISAT2OPTS -x $HISAT2INDEX -1 $R1FILE -2 $R2FILE -S ${SAMPLENM}.sam
    fi
    touch hisat2.done
# use samtools to remove unmapped reads, could be done in picard too.
[ ! -f samtools.done ]
    samtools view -bh -F 4 -@ 8 ${SAMPLENM}.sam | samtools sort -o ${SAMPLENM}.sorted.bam -@ 8 -O bam -T temp 
    samtools index ${SAMPLENM}.sorted.bam
    touch samtools.done
[ ! -f picard.done ]
    $PTOOL/picard.jar MarkDuplicates I=${SAMPLENM}.sorted.bam O=${SAMPLENM}.cleaned.bam M=${SAMPLENM}.matrix REMOVE_DUPLICATES=true 
    touch picard.done
