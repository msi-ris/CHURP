#!/bin/bash -l
#PBS -l nodes=1:ppn=8,mem=16gb,walltime=24:00:00

# Parse SampleSheet using $PBS_ARRAYID
# Assume there is a header line, so for ID n, the sample is n+1
# Sample Sheet: SampleNM, R1, R2, Trim (yes or no), TrimmomaticOption, Hisat2Index, Hisat2Option, GTF/GFF
IN=`head -n $((${PBS_ARRAYID}+1)) ${SampleSheet} | tail -1`
# handle empty line and comment line
[ -z "${IN// }" ] && echo "hit an empty line in sample sheet" && exit $?
[ "$IN" = "\#.*" ] && echo "hit a comment line in sample sheet" && exit $?
while IFS="|" read -ra OPTS; do 
    SAMPLENM=${OPTS[0]}
    R1FILE=${OPTS[1]}    
    R2FILE=${OPTS[2]}
    OUTDIR=${OPTS[3]}
    WORKDIR=${OPTS[4]}
    TRIM=${OPTS[5]}
    TRIMOPTS=${OPTS[6]}
    HISAT2INDEX=${OPTS[7]}
    HISAT2OPTS=${OPTS[8]}
    GTFFILE=${OPTS[9]}
done <<< "$IN"

# load necessary modules
module load hisat2/2.1.0
module load fastqc/0.11.7
module load trimmomatic/0.33
module load java/jdk1.8.0_144
module load samtools/1.7

# set working directory
cd $WORKDIR/singlesamples
mkdir ${SAMPLENM}
cd ${SAMPLENM}

# check whether to purge files or not. $PURGE will be parsed by command line
if [ $PURGE = "true" ]; then
    find . -name '*.done' -delete    
fi

# start workflow with check point
[ -f ${SAMPLENM}.done ] && echo "found done analysis, exit" && exit $?

# Set Up a log file instead (?)
if [ ! -f fastqc.done]; then
    fastqc -t 2 ${R1FILE} ${R2FILE}
    touch fastqc.done
fi

# To use -basein option, fastq file must be in format *_R1_*.fastq and *_R2_*.fastq
if [ $TRIM = "yes" ]; then
    if [ ! -f trimmomatic.done ]; then
        java -jar ${TRIMMOMATIC}/trimmomatic.jar PE -threads 8 -basein $R1FILE -baseout ${SAMPLENM} $TRIMOPTS 2>trim.log
        touch trimmomatic.done
    fi
    if [ ! -f fastqc.trim.done ]; then
        fastqc -t 2 ${SAMPLENM}_1P ${SAMPLENM}_2P
        touch fastqc.trim.done
    fi
fi

if [ ! -f hisat2.done ]; then
    if [ $TRIM = "yes" ]; then
        hisat2 $HISAT2OPTS -x $HISAT2INDEX -1 ${SAMPLENM}_1P -2 ${SAMPLENM}_2P -S ${SAMPLENM}.sam 2>alignment.summary
    else
        hisat2 $HISAT2OPTS -x $HISAT2INDEX -1 $R1FILE -2 $R2FILE -S ${SAMPLENM}.sam 2>alignment.summary
    fi
    touch hisat2.done
fi

# use samtools to remove unmapped reads, could be done in picard too.
if [ ! -f samtools.done ]; then
    samtools view -bh -F 4 -@ 8 ${SAMPLENM}.sam | samtools sort -o ${SAMPLENM}.sorted.bam -@ 8 -O bam -T temp 
    samtools index ${SAMPLENM}.sorted.bam
    samtools rmdup ${SAMPLENM}.sorted.bam ${SAMPLENM}.sorted.rmdup.bam
    touch samtools.done
fi

touch ${SAMPLENM}.done
